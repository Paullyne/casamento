-- Create tables for wedding invitation app

-- Table for wedding event details
CREATE TABLE public.wedding_events (
  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  bride_name TEXT NOT NULL,
  groom_name TEXT NOT NULL,
  wedding_date TIMESTAMP WITH TIME ZONE NOT NULL,
  venue_name TEXT NOT NULL,
  venue_address TEXT NOT NULL,
  venue_coordinates POINT,
  dress_code TEXT,
  additional_info TEXT,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- Table for RSVP responses
CREATE TABLE public.rsvps (
  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  guest_name TEXT NOT NULL,
  email TEXT,
  phone TEXT,
  attending BOOLEAN NOT NULL,
  plus_ones INTEGER DEFAULT 0,
  dietary_restrictions TEXT,
  message TEXT,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- Table for wedding gifts
CREATE TABLE public.wedding_gifts (
  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  name TEXT NOT NULL,
  description TEXT,
  price DECIMAL(10,2) NOT NULL,
  image_url TEXT,
  is_purchased BOOLEAN DEFAULT FALSE,
  purchased_by TEXT,
  qr_code_data TEXT,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- Table for guest photos
CREATE TABLE public.guest_photos (
  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  photo_url TEXT NOT NULL,
  caption TEXT,
  uploaded_by TEXT NOT NULL,
  is_approved BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- Enable Row Level Security
ALTER TABLE public.wedding_events ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.rsvps ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.wedding_gifts ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.guest_photos ENABLE ROW LEVEL SECURITY;

-- RLS Policies for wedding_events (read-only for guests, admin can modify)
CREATE POLICY "Wedding events are viewable by everyone" 
ON public.wedding_events 
FOR SELECT 
USING (true);

CREATE POLICY "Admins can manage wedding events" 
ON public.wedding_events 
FOR ALL 
USING (auth.uid() IS NOT NULL);

-- RLS Policies for RSVPs (guests can create their own, admins can view all)
CREATE POLICY "Anyone can create RSVP" 
ON public.rsvps 
FOR INSERT 
WITH CHECK (true);

CREATE POLICY "Admins can view all RSVPs" 
ON public.rsvps 
FOR SELECT 
USING (auth.uid() IS NOT NULL);

CREATE POLICY "Guests can update their own RSVP by email" 
ON public.rsvps 
FOR UPDATE 
USING (true);

-- RLS Policies for wedding gifts (viewable by all, manageable by admins)
CREATE POLICY "Wedding gifts are viewable by everyone" 
ON public.wedding_gifts 
FOR SELECT 
USING (true);

CREATE POLICY "Anyone can mark gifts as purchased" 
ON public.wedding_gifts 
FOR UPDATE 
USING (true);

CREATE POLICY "Admins can manage wedding gifts" 
ON public.wedding_gifts 
FOR INSERT 
WITH CHECK (auth.uid() IS NOT NULL);

-- RLS Policies for guest photos (guests can upload, admins approve)
CREATE POLICY "Anyone can upload photos" 
ON public.guest_photos 
FOR INSERT 
WITH CHECK (true);

CREATE POLICY "Approved photos are viewable by everyone" 
ON public.guest_photos 
FOR SELECT 
USING (is_approved = true OR auth.uid() IS NOT NULL);

CREATE POLICY "Admins can manage all photos" 
ON public.guest_photos 
FOR UPDATE 
USING (auth.uid() IS NOT NULL);

-- Create storage bucket for photos
INSERT INTO storage.buckets (id, name, public) VALUES ('wedding-photos', 'wedding-photos', true);

-- Storage policies for wedding photos
CREATE POLICY "Anyone can upload wedding photos" 
ON storage.objects 
FOR INSERT 
WITH CHECK (bucket_id = 'wedding-photos');

CREATE POLICY "Wedding photos are publicly viewable" 
ON storage.objects 
FOR SELECT 
USING (bucket_id = 'wedding-photos');

-- Insert sample wedding event data
INSERT INTO public.wedding_events (
  bride_name, 
  groom_name, 
  wedding_date, 
  venue_name, 
  venue_address, 
  dress_code, 
  additional_info
) VALUES (
  'Pauline', 
  'Albert', 
  '2025-12-13 13:00:00+00', 
  'Ch√°cara Santa Clara - Dona Fil√≥', 
  'BR-120 - Dona Eus√©bia, Dona Euz√©bia - MG, 36784-000', 
  'Traje Social/Esporte Fino', 
  'Cerim√¥nia ao ar livre. Em caso de chuva, n√£o se preocupe, o ambiente estar√° protegido com tendas.'
);

-- Insert sample wedding gifts
INSERT INTO public.wedding_gifts (name, description, price, qr_code_data) VALUES
  ('Velas Arom√°ticas', 'Velas arom√°ticas para disfar√ßar o cheiro da treta üïØÔ∏èüî•', 50.00, 'PIX_QR_CODE_DATA_1'),
  ('Colch√£o Infl√°vel', 'Colch√£o infl√°vel de emerg√™ncia ‚Äî para quando algu√©m for ‚Äúpro sof√°‚Äù üõèÔ∏è‚û°Ô∏èüõãÔ∏è', 100.00, 'PIX_QR_CODE_DATA_2'),
  ('Panela de Press√£o El√©trica', 'Panela de press√£o el√©trica 6L com m√∫ltiplas fun√ß√µes, s√≥ pra evitar explodir a casa mesmo', 150.00, 'PIX_QR_CODE_DATA_3'),
  ('Kit Caf√© Gourmet', 'Kit com cafeteira italiana e gr√£os especiais. A noiva adora caf√©!', 100.00, 'PIX_QR_CODE_DATA_4'),
  ('Aspirador de P√≥ Robot', 'Aspirador rob√¥ inteligente com mapeamento. Tecnologia e ci√™ncia juntas, para ajudar a manter a casa habit√°vel', 150.00, 'PIX_QR_CODE_DATA_5'),
  ('Camiseta Homem', 'Camiseta ‚ÄúSou sempre a raz√£o‚Äù (edi√ß√£o para o noivo) üëïüòè', 30.00, 'PIX_QR_CODE_DATA_5'),
  ('Camiseta Mulher', 'Camiseta ‚ÄúTenho raz√£o, mas finjo que n√£o‚Äù (edi√ß√£o para a noiva) üëöüòâ', 30.00, 'PIX_QR_CODE_DATA_6'),
  ('Chocolate', 'Caixa de chocolates para dias de treta üç´üî•', 50.00, 'PIX_QR_CODE_DATA_6'),
  ('Spray Anti-Ci√∫mes', 'Spray anti-ci√∫mes (funciona 0%, mas a inten√ß√£o conta)', 35.00, 'PIX_QR_CODE_DATA_6'),
  ('Kit PAZ & AMOR', 'Kit ‚Äúpaz e amor‚Äù (v√°lido para 1 discuss√£o por m√™s) üïäÔ∏èüí¢', 40.00, 'PIX_QR_CODE_DATA_6'),
  ('Cart√µes de ‚ÄúPasse Livre‚Äù', 'Pode usar para escapar de uma DR por m√™s (limitado) üÉè‚úã', 50.00, 'PIX_QR_CODE_DATA_6'),
  ('Cofrinho', 'Cofrinho ‚Äúarrependimentos instant√¢neos‚Äù üê∑üò¨', 20.00, 'PIX_QR_CODE_DATA_6'),
  ('Vale Massagem', 'Vale-massagem vital√≠cio (de prefer√™ncia profissional, n√£o amador) üíÜ‚Äç‚ôÄÔ∏è', 150.00, 'PIX_QR_CODE_DATA_6'),
  ('Kit S.O.S', 'Kit ‚ÄúS.O.S. ressaca de lua de mel‚Äù üçæü•¥', 70.00, 'PIX_QR_CODE_DATA_6'),
  ('Bot√£o de Pausa', 'Bot√£o de pausa para sogra (funciona s√≥ na imagina√ß√£o) üõëüëµ', 50.00, 'PIX_QR_CODE_DATA_6'),
  ('Jogo de Panelas', 'Jogo de panelas anti-briga (com tampa que fecha a discuss√£o) üç≥ü´ß', 250.00, 'PIX_QR_CODE_DATA_6'),
  ('Varinha M√°gica', 'Varinha m√°gica para transformar ‚ÄúSim, Amor‚Äù em realidade ü™Ñüòâ', 50.00, 'PIX_QR_CODE_DATA_6'),
  ('Extintor de DR', 'Extintor de DR (Discuss√£o de Relacionamento) pra acabar de vez com aquela conversa chata üßØ‚ù§Ô∏è', 100.00, 'PIX_QR_CODE_DATA_6'),
  ('Cueca da Sorte', 'Cueca boxer especial para trazer sorte para o noivo e fazer a noiva animar', 25.00, 'PIX_QR_CODE_DATA_6'),
  ('Livro', 'Livro ‚ÄúComo n√£o dormir de cal√ßa jeans depois da briga‚Äù üìñüò§', 80.00, 'PIX_QR_CODE_DATA_6'),
  ('Alarme de DR', 'Toca antes que algu√©m fale ‚Äúprecisamos conversar‚Äù üö®üó£Ô∏è', 50.00, 'PIX_QR_CODE_DATA_6');

-- Create function to update timestamps
CREATE OR REPLACE FUNCTION public.update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create triggers for automatic timestamp updates
CREATE TRIGGER update_wedding_events_updated_at
  BEFORE UPDATE ON public.wedding_events
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();

CREATE TRIGGER update_rsvps_updated_at
  BEFORE UPDATE ON public.rsvps
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();

CREATE TRIGGER update_wedding_gifts_updated_at
  BEFORE UPDATE ON public.wedding_gifts
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();